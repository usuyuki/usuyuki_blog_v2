services:
  ghost:
    image: ghost:5-alpine
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: example
      database__connection__database: ghost
      NODE_ENV: development
      url: ${BACKEND_API_URL}
    volumes:
      - ./backend:/var/lib/ghost/content
      - ./backend/config.development.json:/var/lib/ghost/config.development.json
    user: "1000:1000"
    ports:
      - "1001:2368"
    depends_on:
      - db
    labels:
      - "logging=promtail"

  astro:
    build:
      context: ./frontend
      dockerfile: ../infra/dev/astro/Dockerfile
    volumes:
      - ./frontend:/frontend
    ports:
      - "1000:1000"
    stdin_open: true
    tty: true
    environment:
      NODE_ENV: development
      GHOST_CONTENT_KEY: ${GHOST_CONTENT_KEY}
      GHOST_API_URL: ${GHOST_API_URL}
      EXTERNAL_BLOGS: ${EXTERNAL_BLOGS}
      LOKI_URL: http://loki:3100
    user: "1000:1000"
    depends_on:
      - loki
    labels:
      - "logging=promtail"
    # デフォルトのlocalhostだとDockerがバインドしてくれなくてERR_EMPTY_RESPONSEになるので明示的に0.0.0.0を指定

  db:
    image: mysql:8.0
    volumes:
      - db-store:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: example

  loki:
    image: grafana/loki:3.5
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:12.1.0
    ports:
      - "1002:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin}
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-storage:/var/lib/grafana
    depends_on:
      - loki

  promtail:
    image: grafana/promtail:3.5
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v2.55.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.53.0
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg

volumes:
  db-store:
  loki-data:
  grafana-storage:
  prometheus-data:
