---
import ArchiveList from "~/components/molecule/widget/ArchiveList.astro";
import TagList from "~/components/organism/tag/TagList.astro";
import { getLatestArticles } from "~/libs/articleAggregator";
import { iso8601TimeToDate } from "~/libs/helper/iso8601TimeToDate";
import type { ArticleArchiveType } from "~/types/ArticleArchiveType";
import ArticleCard from "../../components/organism/article/ArticleCard.svelte";
import BaseLayout from "~/layouts/BaseLayout.astro";
import type { HeadMetaType } from "~/types/HeadMetaType";

interface Props extends HeadMetaType {}
const headMeta: Props = Astro.props;

const recentArticles = await getLatestArticles({
	limit: 5,
	includeExternal: false,
});

const recentArticlesWithFormattedDate = recentArticles.map(
	(article: ArticleArchiveType) => {
		if (article.isExternal || typeof article.published_at !== "string") {
			return article;
		}
		return {
			...article,
			published_at: iso8601TimeToDate(article.published_at),
		};
	},
);
---

<BaseLayout {...headMeta}>
	<slot />
	<hr class="mt-20 mb-4" />
	<div class="flex justify-center flex-wrap">
		<div class="w-full">
			<h2 class="text-2xl font-bold">Recent Articles</h2>
			<div class="flex flex-wrap">
				{recentArticlesWithFormattedDate.map((post: ArticleArchiveType) => (
					<ArticleCard post={post} client:load />
				))}
			</div>
		</div>

		<div class="w-full md:w-1/2">
			<h2 class="text-2xl font-bold">Tags</h2>
			<TagList />
		</div>

		<div class="w-full md:w-1/2">
			<h2 class="text-2xl font-bold">Archive</h2>
			<ArchiveList ulClass="mx-auto slim-archive" />
		</div>
	</div>
</BaseLayout>
