---
import { Image } from "astro:assets";
import CircleMD from "~/components/atom/date/CircleMD.astro";
import { iso8601TimeToDate } from "~/libs/helper/iso8601TimeToDate";
import type { ArticleArchiveType } from "~/types/ArticleArchiveType";

interface Props {
	posts: ArticleArchiveType[];
}
const { posts } = Astro.props;
//日付の変換（外部記事は変換をスキップ）
posts.map((post: ArticleArchiveType) => {
	if (typeof post.published_at === "string" && !post.isExternal) {
		post.published_at = iso8601TimeToDate(post.published_at);
	}
});
---

<div class="flex flex-wrap items-stretch">
	{
		posts.map((post: ArticleArchiveType) => (
			<div class="w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 mb-12">
				<a
					class="hover:shadow-xl p-2 block rounded-xl h-full duration-300  "
					href={post.isExternal ? post.externalUrl : `/${post.slug}`}
					target={post.isExternal ? "_blank" : "_self"}
					rel={post.isExternal ? "noopener noreferrer" : undefined}
				>
					<div class="flex justify-center items-center flex-col">
						<CircleMD
							month={typeof post.published_at === 'string' 
								? new Date(post.published_at).getMonth() + 1
								: post.published_at.month}
							day={typeof post.published_at === 'string' 
								? new Date(post.published_at).getDate()
								: post.published_at.day}
							slug={post.slug}
						/>
						<div>
							{post.feature_image ? (
								<Image
									src={post.feature_image}
									width={500}
									height={500}
									format="avif"
									class="object-cover w-40 h-40 rounded-md"
									alt="記事サムネイル"
									transition:name={'image-' + post.slug}
								/>
							) : post.isExternal && post.source ? (
								post.sourceColor && post.sourceColor.startsWith('#') ? (
									<div 
										class="w-40 h-40 rounded-md flex items-center justify-center font-bold text-white text-xl shadow-lg"
										style={`background-color: ${post.sourceColor}`}
									>
										<span>{post.source.slice(0, 5) || 'Blog'}</span>
									</div>
								) : (
									<div 
										class={`w-40 h-40 rounded-md flex items-center justify-center font-bold text-white text-xl shadow-lg ${post.sourceColor || 'bg-gray-600'}`}
									>
										<span>{post.source.slice(0, 5) || 'Blog'}</span>
									</div>
								)
							) : (
								<div class="aspect-square h-40 object-cover bg-gray-200 rounded-md" />
							)}
						</div>
						<h3
							class="text-xl text-black pt-2 text-wrap-balance text-center"
							transition:name={'title-' + post.slug}
						>
							{post.title}
						</h3>
						{post.source && (
							<div class="text-sm text-gray-500 mt-1">
								{post.source}
							</div>
						)}
					</div>
				</a>
			</div>
		))
	}
</div>
