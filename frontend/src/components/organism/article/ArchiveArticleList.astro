---
import { ghostApiWithRetry } from "~/libs/ghostClient";
import { iso8601TimeToDate } from "~/libs/helper/iso8601TimeToDate";
import type { ArticleArchiveType } from "~/types/ArticleArchiveType";
import ArchiveList from "./ArchiveList.svelte";

// 直近6ヶ月の記事を取得
const sixMonthsAgo = new Date();
sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);

const posts = await ghostApiWithRetry.posts.browse({
	filter: `published_at:>='${sixMonthsAgo.toISOString()}'`,
	limit: "all",
	order: "published_at DESC",
});

// 月ごとにグループ化
const groupedPosts: { [key: string]: ArticleArchiveType[] } = {};
posts?.forEach((post: ArticleArchiveType) => {
	const date = iso8601TimeToDate(
		typeof post.published_at === "string" ? post.published_at : "",
	);
	const monthKey = `${date.year}-${String(date.month).padStart(2, "0")}`;
	if (!groupedPosts[monthKey]) {
		groupedPosts[monthKey] = [];
	}
	groupedPosts[monthKey].push({
		...post,
		published_at: date,
	});
});

// 月キーを降順でソート
const sortedMonthKeys = Object.keys(groupedPosts).sort((a, b) =>
	b.localeCompare(a),
);
---

<div class="container mx-auto px-4">
	<h1 class="text-3xl font-bold text-center mb-8">アーカイブ</h1>
	
	<ArchiveList 
		initialPosts={groupedPosts} 
		initialMonthKeys={sortedMonthKeys}
		client:load 
	/>
</div>
